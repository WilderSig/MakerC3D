package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER;
terminal TokenC3D OR, NOT, AND, MAYOR, MENOR, MAYORIGUAL, MENORIGUAL, IGUAL, DIFERENTE;
nonterminal NodoC3D inicial, expresion;

precedence left OR;
precedence left AND;
precedence left NOT;
precedence left MAYOR, MENOR, MAYORIGUAL, MENORIGUAL, IGUAL, DIFERENTE;
precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT; 

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} expresion:exp 
                    {: 
                        RESULT = exp;
                        ControlC3D.agregarC3D(exp.getCad());
                        ControlC3D.agregarEtiquetas(exp.getEtV(), exp.getEtF());
                    :};



expresion   ::= expresion:izq OR expresion:der
                    {: 
                        
                        String c3d = izq.getCad();
                        c3d += izq.getEtV() + ":\n";
                        c3d += der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D("",der.getEtV(), izq.getEtF() + "," + der.getEtF()); 
                    :}
                |   expresion:izq AND expresion:der
                    {: 
                        String c3d =  izq.getCad() + izq.getEtV() + ":\n" +  der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D("",der.getEtV(), izq.getEtF() + "," + der.getEtF());  
                    :}        
                |    NOT expresion:der
                    {: 
                        
                        String c3d = der.getCad()+";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D("",der.getEtF(), der.getEtV()); 
                    :}
                |   expresion:izq MAYOR expresion:der
                    {: 
                        String tempEt1 = ControlC3D.generaEtiqueta();
                        String tempEt2 = ControlC3D.generaEtiqueta();
                    
                        String c3d =  "if (" + izq.getCad() + " > " + der.getCad() +  ") goto" + tempEt1  + ";\n" + "goto " + tempEt2 + ";\n";
                        
                        RESULT = new NodoC3D(c3d, tempEt1,tempEt2); 
                    :}
                |   expresion:izq MENOR expresion:der
                    {: 
                        String tempEt1 = ControlC3D.generaEtiqueta();
                        String tempEt2 = ControlC3D.generaEtiqueta();
                    
                        String c3d =  "if (" + izq.getCad() + " < " + der.getCad() +  ") goto" + tempEt1  + ";\n" + "goto " + tempEt2 + ";\n";
                        
                        RESULT = new NodoC3D(c3d, tempEt1,tempEt2); 
                    :}
                |   expresion:izq MAYORIGUAL expresion:der
                    {: 
                        String tempEt1 = ControlC3D.generaEtiqueta();
                        String tempEt2 = ControlC3D.generaEtiqueta();
                    
                        String c3d =  "if (" + izq.getCad() + " >= " + der.getCad() +  ") goto" + tempEt1  + ";\n" + "goto " + tempEt2 + ";\n";
                        
                        RESULT = new NodoC3D(c3d, tempEt1,tempEt2); 
                    :}
                |   expresion:izq MENORIGUAL expresion:der
                    {: 
                       String tempEt1 = ControlC3D.generaEtiqueta();
                        String tempEt2 = ControlC3D.generaEtiqueta();
                    
                        String c3d =  "if (" + izq.getCad() + " <= " + der.getCad() +  ") goto" + tempEt1  + ";\n" + "goto " + tempEt2 + ";\n";
                        
                        RESULT = new NodoC3D(c3d, tempEt1,tempEt2); 
                    :}
                |   expresion:izq IGUAL expresion:der
                    {: 
                        String tempEt1 = ControlC3D.generaEtiqueta();
                        String tempEt2 = ControlC3D.generaEtiqueta();
                    
                        String c3d =  "if (" + izq.getCad() + " == " + der.getCad() +  ") goto" + tempEt1  + ";\n" + "goto " + tempEt2 + ";\n";
                        
                        RESULT = new NodoC3D(c3d, tempEt1,tempEt2); 
                    :}
                |   expresion:izq DIFERENTE expresion:der
                    {: 
                        String tempEt1 = ControlC3D.generaEtiqueta();
                        String tempEt2 = ControlC3D.generaEtiqueta();
                    
                        String c3d =  "if (" + izq.getCad() + " != " + der.getCad() +  ") goto" + tempEt1  + ";\n" + "goto " + tempEt2 + ";\n";
                        
                        RESULT = new NodoC3D(c3d, tempEt1,tempEt2); 
                    :}
                |   expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   PAR_IZQ expresion:exp PAR_DER   
                    {: RESULT = exp; :}
            |   ID:id           
                    {: RESULT = new NodoC3D(id); :}
            |   ENTERO:entero   
                    {: RESULT = new NodoC3D(entero); :}
            |   DECIMAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            ;